<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- spring bean configuration file!  -->
	
	<!-- 
	<bean id="tv1" class="polymorphism.LgTv"></bean> 
		기본생성자는 무조건 호출, init-method : 기본 메소드 하나 호출
		lazy-init : 컨테이너가 가동 시점(getBean)에 인스턴스생성할 거냐(true), 컨테이너 생성 시점에 생성할거냐(false) 
		scope : 디폴트는 싱글톤(한 번만), 프로토타입은 호출할 때마다 찍는다. 
	<bean id="tv2" class="polymorphism.SamsungTv" init-method="initMethod" lazy-init="false" scope="prototype"></bean>
	 -->
	
	<!--
	<bean id="tv" class="polymorphism.SamsungTv">			아무것도 안 넣으면 그냥 기본 생성자 호출.
	
	 	<constructor-arg ref="apple"></constructor-arg>  	아규먼트 레퍼런스를 넣으면 -> 기본생성자 대신 주입 생성자 호출		
	 	<constructor-arg value="10000"></constructor-arg>	주입생성자2 호출(매개값이 2개라서)											
	</bean>
	-->	 
	 
	 <!-- 
	<bean id="tv" class="polymorphism.SamsungTv">
	 	<property name="speaker" ref="sony"></property> 	property : 세터 처리
	</bean>
	  
	<bean id="sony" class="polymorphism.SonySpeaker"/>
	<bean id="apple" class="polymorphism.AppleSpeaker"></bean>
	
	이런식으로 xml에서 처리 가능.
	<bean id="xxx" class="java.lang.String">
		<constructor-arg value="111.222.111.11"></constructor-arg>
	</bean>
	 -->
	 
	 
	 <!-- 어노테이션 쓰는 방법 -->
	 <!-- @component 붙어있는 클래스를 컨테이너에 등록하겠다. -->
	<context:component-scan base-package="polymorphism"></context:component-scan>
	
</beans>
